# This workflow will build & test the component

name: build

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-binaries:
    runs-on: ubuntu-latest
    container: codetent/crypta-dev:4dc85186fa8e3bf467b99ce7530047e2f5d8237b
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: version
        uses: codetent/semver-by-label-action@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - name: Build binaries & run tests
        env:
          GORELEASER_CURRENT_TAG: ${{ steps.version.outputs.version || '' }}
        run: |
          goreleaser --clean ${{ steps.version.outputs.tag != '' && '' || '--snapshot' }}

  build-docs:
    runs-on: ubuntu-latest
    container: codetent/crypta-dev:4dc85186fa8e3bf467b99ce7530047e2f5d8237b
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build documentation
        working-directory: docs
        run: |
          npm ci --no-audit --no-fund
          npm run build
          mkdir -p dist
      - name: Archive artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          name: docs
          retention-days: 1
          path: docs/build

  deploy-docs:
    if: ${{ github.event_name == 'push' }}
    needs: build-docs
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: gh-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: docs
