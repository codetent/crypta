# This workflow will build & test the component

name: build

on:
  workflow_dispatch:
  push:
    branches: [ GH-15_doc ]
  #pull_request:
  #  branches: [ main ]

jobs:
  draft-release:
    if: github.event_name == 'push'
    permissions:
      contents: write  # write permission is required to create a github release
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.release-drafter.outputs.tag_name }}
    steps:
      - id: release-drafter
        uses: release-drafter/release-drafter@v5
        with:
          disable-autolabeler: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-binaries:
    needs: draft-release
    if: always() && !failure() && !cancelled()
    runs-on: ubuntu-latest
    container:
      image: codetent/crypta-dev:4dc85186fa8e3bf467b99ce7530047e2f5d8237b
      options: --user 1001
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run repo check
        run: git rev-parse --is-inside-work-tree
      - name: Build binaries & run tests
        env:
          GORELEASER_CURRENT_TAG: ${{ needs.draft-release.outputs.tag || '' }}
        run: |
          goreleaser \
            --clean \
            --skip=validate --skip=publish --skip=announce \
            ${{ needs.draft-release.result == 'skipped' && '--snapshot' || '' }}

  build-docs:
    runs-on: ubuntu-latest
    container:
      image: codetent/crypta-dev:4dc85186fa8e3bf467b99ce7530047e2f5d8237b
      options: --user 1001
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build documentation
        working-directory: docs
        run: |
          npm ci --no-audit --no-fund
          npm run build
          mkdir -p dist
      - name: Archive artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          name: docs
          retention-days: 1
          path: docs/build

  deploy-docs:
    if: ${{ github.event_name == 'push' }}
    needs: build-docs
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: gh-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: docs
