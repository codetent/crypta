// Code generated by mockery v2.38.0. DO NOT EDIT.

package store

import mock "github.com/stretchr/testify/mock"

// MockSecretStore is an autogenerated mock type for the SecretStore type
type MockSecretStore struct {
	mock.Mock
}

type MockSecretStore_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSecretStore) EXPECT() *MockSecretStore_Expecter {
	return &MockSecretStore_Expecter{mock: &_m.Mock}
}

// GetSecret provides a mock function with given fields: _a0
func (_m *MockSecretStore) GetSecret(_a0 string) (string, bool) {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetSecret")
	}

	var r0 string
	var r1 bool
	if rf, ok := ret.Get(0).(func(string) (string, bool)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// MockSecretStore_GetSecret_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetSecret'
type MockSecretStore_GetSecret_Call struct {
	*mock.Call
}

// GetSecret is a helper method to define mock.On call
//   - _a0 string
func (_e *MockSecretStore_Expecter) GetSecret(_a0 interface{}) *MockSecretStore_GetSecret_Call {
	return &MockSecretStore_GetSecret_Call{Call: _e.mock.On("GetSecret", _a0)}
}

func (_c *MockSecretStore_GetSecret_Call) Run(run func(_a0 string)) *MockSecretStore_GetSecret_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockSecretStore_GetSecret_Call) Return(_a0 string, _a1 bool) *MockSecretStore_GetSecret_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockSecretStore_GetSecret_Call) RunAndReturn(run func(string) (string, bool)) *MockSecretStore_GetSecret_Call {
	_c.Call.Return(run)
	return _c
}

// SetSecret provides a mock function with given fields: _a0, _a1
func (_m *MockSecretStore) SetSecret(_a0 string, _a1 string) {
	_m.Called(_a0, _a1)
}

// MockSecretStore_SetSecret_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetSecret'
type MockSecretStore_SetSecret_Call struct {
	*mock.Call
}

// SetSecret is a helper method to define mock.On call
//   - _a0 string
//   - _a1 string
func (_e *MockSecretStore_Expecter) SetSecret(_a0 interface{}, _a1 interface{}) *MockSecretStore_SetSecret_Call {
	return &MockSecretStore_SetSecret_Call{Call: _e.mock.On("SetSecret", _a0, _a1)}
}

func (_c *MockSecretStore_SetSecret_Call) Run(run func(_a0 string, _a1 string)) *MockSecretStore_SetSecret_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string))
	})
	return _c
}

func (_c *MockSecretStore_SetSecret_Call) Return() *MockSecretStore_SetSecret_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockSecretStore_SetSecret_Call) RunAndReturn(run func(string, string)) *MockSecretStore_SetSecret_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockSecretStore creates a new instance of MockSecretStore. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSecretStore(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSecretStore {
	mock := &MockSecretStore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
